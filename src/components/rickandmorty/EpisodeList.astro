---
import LayoutWithCache from '../../layouts/LayoutWithCache.astro';
import PaginationR from '../PaginationR.astro';

const apiUrl = 'https://rickandmortyapi.com/api/episode';

// Obtener parámetros de la URL
const url = new URL(Astro.url.pathname + Astro.url.search, Astro.url.origin);
const pageParam = Number(url.searchParams.get('page') ?? 1);
const nameParam = url.searchParams.get('name') ?? '';
const episodeParam = url.searchParams.get('episode') ?? '';
const currentPage = Math.max(pageParam, 1);

// Construir la URL con los parámetros de filtro
const filterUrl = `${apiUrl}?page=${currentPage}&name=${nameParam}&episode=${episodeParam}`;

let episodes = [];
let totalPages = 1;
let error = null;

try {
  // Realiza la solicitud a la API para la página actual
  const res = await fetch(filterUrl);
  const data = await res.json();
  episodes = data.results;
  totalPages = data.info.pages;
} catch (err) {
  error = 'Error fetching episodes. Please try again later.';
}

interface Episode {
  id: number;
  name: string;
  air_date: string;
  episode: string;
  characters: string[];
  url: string;
  created: string;
}
---

<LayoutWithCache>
  <div class="container mx-auto p-8">
    <h1 class="text-4xl font-bold text-valorant mb-8">Rick and Morty Episodes</h1>

    <!-- Formulario de filtros -->
    <form method="GET" action="/rickandmorty/episodes" class="mb-8">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        <input type="text" name="name" placeholder="Episode name" value={nameParam} class="p-2 bg-valorant-dark text-valorant rounded" />
        <input type="text" name="episode" placeholder="Episode code" value={episodeParam} class="p-2 bg-valorant-dark text-valorant rounded" />
      </div>
      <div class="flex space-x-4 mt-4">
        <button type="submit" class="bg-valorant text-valorant-dark p-2 rounded">Filter</button>
        <a href="/rickandmorty/episodes" class="bg-valorant text-valorant-dark p-2 rounded">Clear</a>
      </div>
    </form>

    <!-- Manejar errores -->
    {error ? (
      <p class="text-red-500">{error}</p>
    ) : (
      <div>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {episodes.map((episode: Episode) => (
            <Fragment key={episode.id}>
              <a href={`/rickandmorty/episodes/${episode.id}`} class="block bg-valorant-dark p-4 rounded-lg shadow-lg hover:shadow-2xl transition-shadow duration-300">
                <h2 class="text-2xl font-semibold text-valorant mb-2">{episode.name}</h2>
                <p class="text-lg">Air Date: {episode.air_date}</p>
                <p class="text-lg">Episode: {episode.episode}</p>
                <p class="text-lg">Characters: {episode.characters.length}</p>
                <p class="text-lg">Created: {new Date(episode.created).toLocaleDateString()}</p>
              </a>
            </Fragment>
          ))}
        </div>

        <PaginationR totalPages={totalPages} currentPage={currentPage} />
      </div>
    )}
  </div>
</LayoutWithCache>
